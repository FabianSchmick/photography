# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Available and default locale
    app.locales: de|en
    locale: '%env(string:LOCALE)%'

    # The upload directory in /public
    upload_directory: '/uploads'
    abs_upload_directory: '%kernel.project_dir%/public%upload_directory%'
    google_analytics: '%env(string:GOOGLE_ANALYTICS)%'

    # Image qualities
    jpeg_quality: 75
    png_level: 6

    liip_imagine.jpegoptim.binary: '%kernel.project_dir%/%env(string:JPEGOPTIM_BINARY)%'
    liip_imagine.optipng.binary: '%kernel.project_dir%/%env(string:OPTIPNG_BINARY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $publicDir: '%kernel.project_dir%/public'
            $defaultLocale: '%locale%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Vich\UploaderBundle\Naming\SubdirDirectoryNamer:
        public: true

    App\Imagine\Filter\Loader\Blur:
        tags:
            - { name: liip_imagine.filter.loader, loader: blur }

    App\EventListener\RemovedFileListener:
        tags:
            - { name: kernel.event_listener, event: vich_uploader.pre_remove, method: onPreRemove }
            - { name: kernel.event_listener, event: vich_uploader.post_remove, method: onPostRemove }
